version: 2
jobs:
  # working_directory: ${WORK_DIRECTORY}

  build-test:
    docker:
      - image: circleci/golang:1.14

    # environment: # environment variables for the build itself
    #   TEST_RESULTS: /go/test-results # path to where test results will be saved
    #   # WORK_DIRECTORY: /go/src/${CIRCLE_BRANCH}

    steps:
      - checkout
      # - run: mkdir -p $TEST_RESULTS

      - run:
          name: deps test
          command: make test

      - run: ls -laR

      - store_artifacts:
          path: ./tmp/test-coverage
          destination: test-coverage

      - persist_to_workspace:
          root: .
          paths:
            - .

  package:
    docker:
      - image: circleci/golang:1.14

    # environment: # environment variables for the build itself
    #   TEST_RESULTS: /go/test-results # path to where test results will be saved
    #   # WORK_DIRECTORY: /go/src/${CIRCLE_BRANCH}

    steps:
      - attach_workspace:
          at: .

      # - run: ls -laR
      - run:
          name: buid
          command: make build

      - store_artifacts:
          path: ./bin
          destination: binaries

  docker-build:
    machine:
      image: ubuntu-1604:201903-01
      # docker_layer_caching: true
    environment:
      build_container: "build_container"
      dockerhub_repo: "donkeyx/tcp-wait"
      github_repo: "docker.pkg.github.com/donkeyx/tcp-wait/tcp-wait"

    steps:
      - attach_workspace:
          at: .

      - run: find $(pwd) -type f
      - run:
          name: container build
          command: make docker-build

      - run:
          name: tag and push dockerhub
          command: |
            docker tag tcp-wait $dockerhub_repo:latest
            docker tag tcp-wait $dockerhub_repo:circleci-${CIRCLE_SHA1}

            echo "$DOCKERHUB_PASS" | docker login --username $DOCKERHUB_USER --password-stdin
            docker push $dockerhub_repo:circleci-${CIRCLE_SHA1}
            docker push $dockerhub_repo:latest

      - run:
          name: tag and push github
          command: |
            echo $GITHUB_PASS | docker login docker.pkg.github.com --username $GITHUB_USER --password-stdin

            docker tag tcp-wait $github_repo:latest
            docker push $github_repo:latest

            docker tag $build_container $github_repo:circleci-${CIRCLE_SHA1}
            docker push $github_repo:circleci-${CIRCLE_SHA1}

  # publish-github-release:
  #   docker:
  #     - image: circleci/golang:1.14
  #   steps:
  #     - attach_workspace:
  #         at: ./bin
  #     - run: ls -laR
  #     - run:
  #         name: "Publish Release on GitHub"
  #         command: |
  #           go get github.com/tcnksm/ghr
  #           VERSION=v0.9.0
  #           # ghr -t ${GITHUB_TOKEN} -delete ${VERSION} ./bin/
  #           ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./bin/

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-test
      - package:
          requires:
            - build-test
      - docker-build:
          requires:
            - package
